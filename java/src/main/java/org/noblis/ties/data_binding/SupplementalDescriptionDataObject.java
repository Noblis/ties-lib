// Generated by delombok at Tue Apr 30 16:25:30 EDT 2019
/*
 * Copyright 2019 Noblis, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.noblis.ties.data_binding;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Map;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({"assertionId", "assertionReferenceId", "assertionReferenceIdLabel", "system", "informationType", "dataObject", "securityTag"})
public class SupplementalDescriptionDataObject extends SupplementalDescription {
    @JsonProperty("dataObject")
    private Map dataObject;

    public SupplementalDescriptionDataObject(String assertionId, String assertionReferenceId, String assertionReferenceIdLabel, String system, String informationType, String securityTag, Map dataObject) {
        super(assertionId, assertionReferenceId, assertionReferenceIdLabel, system, informationType, securityTag);
        this.dataObject = dataObject;
    }

    @java.lang.SuppressWarnings("all")
    public SupplementalDescriptionDataObject() {
    }

    @java.lang.SuppressWarnings("all")
    public Map getDataObject() {
        return this.dataObject;
    }

    @java.lang.SuppressWarnings("all")
    public void setDataObject(final Map dataObject) {
        this.dataObject = dataObject;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof SupplementalDescriptionDataObject)) return false;
        final SupplementalDescriptionDataObject other = (SupplementalDescriptionDataObject) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        final java.lang.Object this$dataObject = this.getDataObject();
        final java.lang.Object other$dataObject = other.getDataObject();
        if (this$dataObject == null ? other$dataObject != null : !this$dataObject.equals(other$dataObject)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof SupplementalDescriptionDataObject;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        final java.lang.Object $dataObject = this.getDataObject();
        result = result * PRIME + ($dataObject == null ? 43 : $dataObject.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "SupplementalDescriptionDataObject(dataObject=" + this.getDataObject() + ")";
    }
}
