// Generated by delombok at Tue Apr 30 16:25:30 EDT 2019
/*
 * Copyright 2019 Noblis, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.noblis.ties.data_binding;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.List;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({"objectId", "sha256Hash", "md5Hash", "size", "mimeType", "absoluteUri", "relativeUri", "originalPath", "authorityInformation", "objectAssertions", "otherInformation"})
public class ObjectItem {
    @JsonProperty("objectId")
    private String objectId;
    @JsonProperty("sha256Hash")
    private String sha256Hash;
    @JsonProperty("md5Hash")
    private String md5Hash;
    @JsonProperty("size")
    private Long size;
    @JsonProperty("mimeType")
    private String mimeType;
    @JsonProperty("absoluteUri")
    private String absoluteUri;
    @JsonProperty("relativeUri")
    private String relativeUri;
    @JsonProperty("originalPath")
    private String originalPath;
    @JsonProperty("authorityInformation")
    private AuthorityInformation authorityInformation;
    @JsonProperty("objectAssertions")
    private Assertions objectAssertions;
    @JsonProperty("otherInformation")
    private List<OtherInformation> otherInformation = null;

    @java.lang.SuppressWarnings("all")
    public ObjectItem() {
    }

    @java.lang.SuppressWarnings("all")
    public ObjectItem(final String objectId, final String sha256Hash, final String md5Hash, final Long size, final String mimeType, final String absoluteUri, final String relativeUri, final String originalPath, final AuthorityInformation authorityInformation, final Assertions objectAssertions, final List<OtherInformation> otherInformation) {
        this.objectId = objectId;
        this.sha256Hash = sha256Hash;
        this.md5Hash = md5Hash;
        this.size = size;
        this.mimeType = mimeType;
        this.absoluteUri = absoluteUri;
        this.relativeUri = relativeUri;
        this.originalPath = originalPath;
        this.authorityInformation = authorityInformation;
        this.objectAssertions = objectAssertions;
        this.otherInformation = otherInformation;
    }

    @java.lang.SuppressWarnings("all")
    public String getObjectId() {
        return this.objectId;
    }

    @java.lang.SuppressWarnings("all")
    public String getSha256Hash() {
        return this.sha256Hash;
    }

    @java.lang.SuppressWarnings("all")
    public String getMd5Hash() {
        return this.md5Hash;
    }

    @java.lang.SuppressWarnings("all")
    public Long getSize() {
        return this.size;
    }

    @java.lang.SuppressWarnings("all")
    public String getMimeType() {
        return this.mimeType;
    }

    @java.lang.SuppressWarnings("all")
    public String getAbsoluteUri() {
        return this.absoluteUri;
    }

    @java.lang.SuppressWarnings("all")
    public String getRelativeUri() {
        return this.relativeUri;
    }

    @java.lang.SuppressWarnings("all")
    public String getOriginalPath() {
        return this.originalPath;
    }

    @java.lang.SuppressWarnings("all")
    public AuthorityInformation getAuthorityInformation() {
        return this.authorityInformation;
    }

    @java.lang.SuppressWarnings("all")
    public Assertions getObjectAssertions() {
        return this.objectAssertions;
    }

    @java.lang.SuppressWarnings("all")
    public List<OtherInformation> getOtherInformation() {
        return this.otherInformation;
    }

    @java.lang.SuppressWarnings("all")
    public void setObjectId(final String objectId) {
        this.objectId = objectId;
    }

    @java.lang.SuppressWarnings("all")
    public void setSha256Hash(final String sha256Hash) {
        this.sha256Hash = sha256Hash;
    }

    @java.lang.SuppressWarnings("all")
    public void setMd5Hash(final String md5Hash) {
        this.md5Hash = md5Hash;
    }

    @java.lang.SuppressWarnings("all")
    public void setSize(final Long size) {
        this.size = size;
    }

    @java.lang.SuppressWarnings("all")
    public void setMimeType(final String mimeType) {
        this.mimeType = mimeType;
    }

    @java.lang.SuppressWarnings("all")
    public void setAbsoluteUri(final String absoluteUri) {
        this.absoluteUri = absoluteUri;
    }

    @java.lang.SuppressWarnings("all")
    public void setRelativeUri(final String relativeUri) {
        this.relativeUri = relativeUri;
    }

    @java.lang.SuppressWarnings("all")
    public void setOriginalPath(final String originalPath) {
        this.originalPath = originalPath;
    }

    @java.lang.SuppressWarnings("all")
    public void setAuthorityInformation(final AuthorityInformation authorityInformation) {
        this.authorityInformation = authorityInformation;
    }

    @java.lang.SuppressWarnings("all")
    public void setObjectAssertions(final Assertions objectAssertions) {
        this.objectAssertions = objectAssertions;
    }

    @java.lang.SuppressWarnings("all")
    public void setOtherInformation(final List<OtherInformation> otherInformation) {
        this.otherInformation = otherInformation;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ObjectItem)) return false;
        final ObjectItem other = (ObjectItem) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$objectId = this.getObjectId();
        final java.lang.Object other$objectId = other.getObjectId();
        if (this$objectId == null ? other$objectId != null : !this$objectId.equals(other$objectId)) return false;
        final java.lang.Object this$sha256Hash = this.getSha256Hash();
        final java.lang.Object other$sha256Hash = other.getSha256Hash();
        if (this$sha256Hash == null ? other$sha256Hash != null : !this$sha256Hash.equals(other$sha256Hash)) return false;
        final java.lang.Object this$md5Hash = this.getMd5Hash();
        final java.lang.Object other$md5Hash = other.getMd5Hash();
        if (this$md5Hash == null ? other$md5Hash != null : !this$md5Hash.equals(other$md5Hash)) return false;
        final java.lang.Object this$size = this.getSize();
        final java.lang.Object other$size = other.getSize();
        if (this$size == null ? other$size != null : !this$size.equals(other$size)) return false;
        final java.lang.Object this$mimeType = this.getMimeType();
        final java.lang.Object other$mimeType = other.getMimeType();
        if (this$mimeType == null ? other$mimeType != null : !this$mimeType.equals(other$mimeType)) return false;
        final java.lang.Object this$absoluteUri = this.getAbsoluteUri();
        final java.lang.Object other$absoluteUri = other.getAbsoluteUri();
        if (this$absoluteUri == null ? other$absoluteUri != null : !this$absoluteUri.equals(other$absoluteUri)) return false;
        final java.lang.Object this$relativeUri = this.getRelativeUri();
        final java.lang.Object other$relativeUri = other.getRelativeUri();
        if (this$relativeUri == null ? other$relativeUri != null : !this$relativeUri.equals(other$relativeUri)) return false;
        final java.lang.Object this$originalPath = this.getOriginalPath();
        final java.lang.Object other$originalPath = other.getOriginalPath();
        if (this$originalPath == null ? other$originalPath != null : !this$originalPath.equals(other$originalPath)) return false;
        final java.lang.Object this$authorityInformation = this.getAuthorityInformation();
        final java.lang.Object other$authorityInformation = other.getAuthorityInformation();
        if (this$authorityInformation == null ? other$authorityInformation != null : !this$authorityInformation.equals(other$authorityInformation)) return false;
        final java.lang.Object this$objectAssertions = this.getObjectAssertions();
        final java.lang.Object other$objectAssertions = other.getObjectAssertions();
        if (this$objectAssertions == null ? other$objectAssertions != null : !this$objectAssertions.equals(other$objectAssertions)) return false;
        final java.lang.Object this$otherInformation = this.getOtherInformation();
        final java.lang.Object other$otherInformation = other.getOtherInformation();
        if (this$otherInformation == null ? other$otherInformation != null : !this$otherInformation.equals(other$otherInformation)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ObjectItem;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $objectId = this.getObjectId();
        result = result * PRIME + ($objectId == null ? 43 : $objectId.hashCode());
        final java.lang.Object $sha256Hash = this.getSha256Hash();
        result = result * PRIME + ($sha256Hash == null ? 43 : $sha256Hash.hashCode());
        final java.lang.Object $md5Hash = this.getMd5Hash();
        result = result * PRIME + ($md5Hash == null ? 43 : $md5Hash.hashCode());
        final java.lang.Object $size = this.getSize();
        result = result * PRIME + ($size == null ? 43 : $size.hashCode());
        final java.lang.Object $mimeType = this.getMimeType();
        result = result * PRIME + ($mimeType == null ? 43 : $mimeType.hashCode());
        final java.lang.Object $absoluteUri = this.getAbsoluteUri();
        result = result * PRIME + ($absoluteUri == null ? 43 : $absoluteUri.hashCode());
        final java.lang.Object $relativeUri = this.getRelativeUri();
        result = result * PRIME + ($relativeUri == null ? 43 : $relativeUri.hashCode());
        final java.lang.Object $originalPath = this.getOriginalPath();
        result = result * PRIME + ($originalPath == null ? 43 : $originalPath.hashCode());
        final java.lang.Object $authorityInformation = this.getAuthorityInformation();
        result = result * PRIME + ($authorityInformation == null ? 43 : $authorityInformation.hashCode());
        final java.lang.Object $objectAssertions = this.getObjectAssertions();
        result = result * PRIME + ($objectAssertions == null ? 43 : $objectAssertions.hashCode());
        final java.lang.Object $otherInformation = this.getOtherInformation();
        result = result * PRIME + ($otherInformation == null ? 43 : $otherInformation.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "ObjectItem(objectId=" + this.getObjectId() + ", sha256Hash=" + this.getSha256Hash() + ", md5Hash=" + this.getMd5Hash() + ", size=" + this.getSize() + ", mimeType=" + this.getMimeType() + ", absoluteUri=" + this.getAbsoluteUri() + ", relativeUri=" + this.getRelativeUri() + ", originalPath=" + this.getOriginalPath() + ", authorityInformation=" + this.getAuthorityInformation() + ", objectAssertions=" + this.getObjectAssertions() + ", otherInformation=" + this.getOtherInformation() + ")";
    }
}
